dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier:3.1.2'
}

contracts {
    baseClassMappings {
        baseClassMapping(".*book", "com.tabiul.producer.BookContractBase")
    }
}

contractTest {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
            if (result.testCount == 0 && !skipTests) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = rootProject.version
            artifact bootJar
            artifact verifierStubsJar
        }
    }
}